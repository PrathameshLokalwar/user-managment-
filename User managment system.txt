import hashlib  # For password hashing
import uuid  # For generating unique user IDs

# Database simulation (in-memory storage for demonstration)
users = []

class User:
    def _init_(self, name, email, password):
        self.id = uuid.uuid4().hex  # Generate a unique ID for the user
        self.name = name
        self.email = email
        self.password = hashlib.sha256(password.encode()).hexdigest()  # Hashing the password

def register_user(name, email, password):
    # Check if email is already registered
    for user in users:
        if user.email == email:
            return False, "Email already registered. Please use a different email."
    
    # Create a new user instance
    new_user = User(name, email, password)
    users.append(new_user)
    
    return True, "Registration successful. You can now login with your credentials."

def login_user(email, password):
 
    for user in users:
        if user.email == email:
            
            if user.password == hashlib.sha256(password.encode()).hexdigest():
                return True, f"Login successful. Welcome, {user.name}!"
            else:
                return False, "Incorrect password. Please try again."
    
                 return False, "Email not found. Please register first."


print(register_user("Alice", "alice@example.com", "password123"))


print(register_user("Bob", "bob@example.com", "securepassword"))


print(login_user("alice@example.com", "password123"))


print(login_user("bob@example.com", "wrongpassword"))


print(login_user("charlie@example.com", "password123"))
